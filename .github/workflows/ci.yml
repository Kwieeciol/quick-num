name: Test and lint

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
    lint:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: [ "3.11", "3.12", "3.13" ]
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt
                pip install ruff
            - name: Lint check
              run: |
                ruff check -v

    type-check:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: [ "3.11", "3.12", "3.13" ]
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt
                pip install mypy
            - name: Type check
              run: |
                mypy app

    test:
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:17
                env:
                    POSTGRES_USER: testuser
                    POSTGRES_PASSWORD: postgres
                ports:
                    - 5432:5432
                options:
                    --health-cmd "pg_isready -U testuser"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        strategy:
            matrix:
                python-version: [ "3.11", "3.12", "3.13" ]
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt
                pip install pytest pytest-asyncio coverage
            - name: Set DATABASE_URL environment variable
              run: echo "DATABASE_URL=postgresql://testuser:postgres@localhost:5432/postgres" >> $GITHUB_ENV
            - name: Run tests
              run: |
                python -m coverage run -m pytest -s -v tests
            - name: Check coverage
              run: |
                python -m coverage report -m
